"use strict";(self.webpackChunkreact_redux_generator=self.webpackChunkreact_redux_generator||[]).push([[24],{463:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "Z": () => (/* binding */ es_button)\n});\n\n// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/extends.js\nvar esm_extends = __webpack_require__(600);\n// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/defineProperty.js\nvar defineProperty = __webpack_require__(220);\n// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 5 modules\nvar slicedToArray = __webpack_require__(732);\n// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/typeof.js\nvar esm_typeof = __webpack_require__(22);\n// EXTERNAL MODULE: ./node_modules/.pnpm/classnames@2.3.2/node_modules/classnames/index.js\nvar classnames = __webpack_require__(875);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n// EXTERNAL MODULE: ./node_modules/.pnpm/rc-util@5.24.4_react-dom@18.2.0+react@18.2.0/node_modules/rc-util/es/omit.js\nvar omit = __webpack_require__(255);\n// EXTERNAL MODULE: ./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js\nvar react = __webpack_require__(959);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/antd@4.23.6_react-dom@18.2.0+react@18.2.0/node_modules/antd/es/config-provider/context.js\n\n\nvar defaultGetPrefixCls = function defaultGetPrefixCls(suffixCls, customizePrefixCls) {\n  if (customizePrefixCls) return customizePrefixCls;\n  return suffixCls ? "ant-".concat(suffixCls) : \'ant\';\n};\n// zombieJ: ðŸš¨ Do not pass `defaultRenderEmpty` here since it will case circular dependency.\nvar ConfigContext = /*#__PURE__*/react.createContext({\n  // We provide a default function for Context without provider\n  getPrefixCls: defaultGetPrefixCls\n});\nvar ConfigConsumer = ConfigContext.Consumer;\n/** @deprecated Use hooks instead. This is a legacy function */\nfunction withConfigConsumer(config) {\n  return function withConfigConsumerFunc(Component) {\n    // Wrap with ConfigConsumer. Since we need compatible with react 15, be care when using ref methods\n    var SFC = function SFC(props) {\n      return /*#__PURE__*/React.createElement(ConfigConsumer, null, function (configProps) {\n        var basicPrefixCls = config.prefixCls;\n        var getPrefixCls = configProps.getPrefixCls;\n        var customizePrefixCls = props.prefixCls;\n        var prefixCls = getPrefixCls(basicPrefixCls, customizePrefixCls);\n        return /*#__PURE__*/React.createElement(Component, _extends({}, configProps, props, {\n          prefixCls: prefixCls\n        }));\n      });\n    };\n    var cons = Component.constructor;\n    var name = cons && cons.displayName || Component.name || \'Component\';\n    if (false) {}\n    return SFC;\n  };\n}\n;// CONCATENATED MODULE: ./node_modules/.pnpm/antd@4.23.6_react-dom@18.2.0+react@18.2.0/node_modules/antd/es/config-provider/DisabledContext.js\n\nvar DisabledContext = /*#__PURE__*/react.createContext(false);\nvar DisabledContextProvider = function DisabledContextProvider(_ref) {\n  var children = _ref.children,\n    disabled = _ref.disabled;\n  var originDisabled = React.useContext(DisabledContext);\n  return /*#__PURE__*/React.createElement(DisabledContext.Provider, {\n    value: disabled || originDisabled\n  }, children);\n};\n/* harmony default export */ const config_provider_DisabledContext = (DisabledContext);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/antd@4.23.6_react-dom@18.2.0+react@18.2.0/node_modules/antd/es/config-provider/SizeContext.js\n\nvar SizeContext = /*#__PURE__*/react.createContext(undefined);\nvar SizeContextProvider = function SizeContextProvider(_ref) {\n  var children = _ref.children,\n    size = _ref.size;\n  return /*#__PURE__*/React.createElement(SizeContext.Consumer, null, function (originSize) {\n    return /*#__PURE__*/React.createElement(SizeContext.Provider, {\n      value: size || originSize\n    }, children);\n  });\n};\n/* harmony default export */ const config_provider_SizeContext = (SizeContext);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/antd@4.23.6_react-dom@18.2.0+react@18.2.0/node_modules/antd/es/_util/reactNode.js\n\nvar isValidElement = react.isValidElement;\n\nfunction isFragment(child) {\n  return child && isValidElement(child) && child.type === React.Fragment;\n}\nfunction replaceElement(element, replacement, props) {\n  if (!isValidElement(element)) {\n    return replacement;\n  }\n  return /*#__PURE__*/react.cloneElement(element, typeof props === \'function\' ? props(element.props || {}) : props);\n}\nfunction cloneElement(element, props) {\n  return replaceElement(element, element, props);\n}\n;// CONCATENATED MODULE: ./node_modules/.pnpm/antd@4.23.6_react-dom@18.2.0+react@18.2.0/node_modules/antd/es/_util/type.js\n// https://stackoverflow.com/questions/46176165/ways-to-get-string-literal-type-of-array-values-without-enum-overhead\nvar tuple = function tuple() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return args;\n};\nvar tupleNum = function tupleNum() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  return args;\n};\n// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\nvar classCallCheck = __webpack_require__(584);\n// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/createClass.js\nvar createClass = __webpack_require__(428);\n// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(200);\n// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/inherits.js + 1 modules\nvar inherits = __webpack_require__(5);\n// EXTERNAL MODULE: ./node_modules/.pnpm/@babel+runtime@7.19.0/node_modules/@babel/runtime/helpers/esm/createSuper.js + 3 modules\nvar createSuper = __webpack_require__(999);\n// EXTERNAL MODULE: ./node_modules/.pnpm/rc-util@5.24.4_react-dom@18.2.0+react@18.2.0/node_modules/rc-util/es/Dom/dynamicCSS.js + 1 modules\nvar dynamicCSS = __webpack_require__(768);\n// EXTERNAL MODULE: ./node_modules/.pnpm/rc-util@5.24.4_react-dom@18.2.0+react@18.2.0/node_modules/rc-util/es/ref.js + 1 modules\nvar es_ref = __webpack_require__(124);\n// EXTERNAL MODULE: ./node_modules/.pnpm/rc-util@5.24.4_react-dom@18.2.0+react@18.2.0/node_modules/rc-util/es/raf.js\nvar raf = __webpack_require__(597);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/antd@4.23.6_react-dom@18.2.0+react@18.2.0/node_modules/antd/es/_util/raf.js\n\nvar id = 0;\nvar ids = {};\n// Support call raf with delay specified frame\nfunction wrapperRaf(callback) {\n  var delayFrames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var myId = id++;\n  var restFrames = delayFrames;\n  function internalCallback() {\n    restFrames -= 1;\n    if (restFrames <= 0) {\n      callback();\n      delete ids[myId];\n    } else {\n      ids[myId] = (0,raf/* default */.Z)(internalCallback);\n    }\n  }\n  ids[myId] = (0,raf/* default */.Z)(internalCallback);\n  return myId;\n}\nwrapperRaf.cancel = function cancel(pid) {\n  if (pid === undefined) return;\n  raf/* default.cancel */.Z.cancel(ids[pid]);\n  delete ids[pid];\n};\nwrapperRaf.ids = ids; // export this for test usage\n;// CONCATENATED MODULE: ./node_modules/.pnpm/antd@4.23.6_react-dom@18.2.0+react@18.2.0/node_modules/antd/es/_util/wave.js\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar styleForPseudo;\n// Where el is the DOM element you\'d like to test for visibility\nfunction isHidden(element) {\n  if (false) {}\n  return !element || element.offsetParent === null || element.hidden;\n}\nfunction getValidateContainer(nodeRoot) {\n  if (nodeRoot instanceof Document) {\n    return nodeRoot.body;\n  }\n  return Array.from(nodeRoot.childNodes).find(function (ele) {\n    return (ele === null || ele === void 0 ? void 0 : ele.nodeType) === Node.ELEMENT_NODE;\n  });\n}\nfunction isNotGrey(color) {\n  // eslint-disable-next-line no-useless-escape\n  var match = (color || \'\').match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\d.]*)?\\)/);\n  if (match && match[1] && match[2] && match[3]) {\n    return !(match[1] === match[2] && match[2] === match[3]);\n  }\n  return true;\n}\nvar InternalWave = /*#__PURE__*/function (_React$Component) {\n  (0,inherits/* default */.Z)(InternalWave, _React$Component);\n  var _super = (0,createSuper/* default */.Z)(InternalWave);\n  function InternalWave() {\n    var _this;\n    (0,classCallCheck/* default */.Z)(this, InternalWave);\n    _this = _super.apply(this, arguments);\n    _this.containerRef = /*#__PURE__*/react.createRef();\n    _this.animationStart = false;\n    _this.destroyed = false;\n    _this.onClick = function (node, waveColor) {\n      var _a, _b;\n      var _this$props = _this.props,\n        insertExtraNode = _this$props.insertExtraNode,\n        disabled = _this$props.disabled;\n      if (disabled || !node || isHidden(node) || node.className.indexOf(\'-leave\') >= 0) {\n        return;\n      }\n      _this.extraNode = document.createElement(\'div\');\n      var _assertThisInitialize = (0,assertThisInitialized/* default */.Z)(_this),\n        extraNode = _assertThisInitialize.extraNode;\n      var getPrefixCls = _this.context.getPrefixCls;\n      extraNode.className = "".concat(getPrefixCls(\'\'), "-click-animating-node");\n      var attributeName = _this.getAttributeName();\n      node.setAttribute(attributeName, \'true\');\n      // Not white or transparent or grey\n      if (waveColor && waveColor !== \'#ffffff\' && waveColor !== \'rgb(255, 255, 255)\' && isNotGrey(waveColor) && !/rgba\\((?:\\d*, ){3}0\\)/.test(waveColor) &&\n      // any transparent rgba color\n      waveColor !== \'transparent\') {\n        extraNode.style.borderColor = waveColor;\n        var nodeRoot = ((_a = node.getRootNode) === null || _a === void 0 ? void 0 : _a.call(node)) || node.ownerDocument;\n        var nodeBody = (_b = getValidateContainer(nodeRoot)) !== null && _b !== void 0 ? _b : nodeRoot;\n        styleForPseudo = (0,dynamicCSS/* updateCSS */.hq)("\\n      [".concat(getPrefixCls(\'\'), "-click-animating-without-extra-node=\'true\']::after, .").concat(getPrefixCls(\'\'), "-click-animating-node {\\n        --antd-wave-shadow-color: ").concat(waveColor, ";\\n      }"), \'antd-wave\', {\n          csp: _this.csp,\n          attachTo: nodeBody\n        });\n      }\n      if (insertExtraNode) {\n        node.appendChild(extraNode);\n      }\n      [\'transition\', \'animation\'].forEach(function (name) {\n        node.addEventListener("".concat(name, "start"), _this.onTransitionStart);\n        node.addEventListener("".concat(name, "end"), _this.onTransitionEnd);\n      });\n    };\n    _this.onTransitionStart = function (e) {\n      if (_this.destroyed) {\n        return;\n      }\n      var node = _this.containerRef.current;\n      if (!e || e.target !== node || _this.animationStart) {\n        return;\n      }\n      _this.resetEffect(node);\n    };\n    _this.onTransitionEnd = function (e) {\n      if (!e || e.animationName !== \'fadeEffect\') {\n        return;\n      }\n      _this.resetEffect(e.target);\n    };\n    _this.bindAnimationEvent = function (node) {\n      if (!node || !node.getAttribute || node.getAttribute(\'disabled\') || node.className.indexOf(\'disabled\') >= 0) {\n        return;\n      }\n      var onClick = function onClick(e) {\n        // Fix radio button click twice\n        if (e.target.tagName === \'INPUT\' || isHidden(e.target)) {\n          return;\n        }\n        _this.resetEffect(node);\n        // Get wave color from target\n        var waveColor = getComputedStyle(node).getPropertyValue(\'border-top-color\') ||\n        // Firefox Compatible\n        getComputedStyle(node).getPropertyValue(\'border-color\') || getComputedStyle(node).getPropertyValue(\'background-color\');\n        _this.clickWaveTimeoutId = window.setTimeout(function () {\n          return _this.onClick(node, waveColor);\n        }, 0);\n        wrapperRaf.cancel(_this.animationStartId);\n        _this.animationStart = true;\n        // Render to trigger transition event cost 3 frames. Let\'s delay 10 frames to reset this.\n        _this.animationStartId = wrapperRaf(function () {\n          _this.animationStart = false;\n        }, 10);\n      };\n      node.addEventListener(\'click\', onClick, true);\n      return {\n        cancel: function cancel() {\n          node.removeEventListener(\'click\', onClick, true);\n        }\n      };\n    };\n    _this.renderWave = function (_ref) {\n      var csp = _ref.csp;\n      var children = _this.props.children;\n      _this.csp = csp;\n      if (! /*#__PURE__*/react.isValidElement(children)) return children;\n      var ref = _this.containerRef;\n      if ((0,es_ref/* supportRef */.Yr)(children)) {\n        ref = (0,es_ref/* composeRef */.sQ)(children.ref, _this.containerRef);\n      }\n      return cloneElement(children, {\n        ref: ref\n      });\n    };\n    return _this;\n  }\n  (0,createClass/* default */.Z)(InternalWave, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.destroyed = false;\n      var node = this.containerRef.current;\n      if (!node || node.nodeType !== 1) {\n        return;\n      }\n      this.instance = this.bindAnimationEvent(node);\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      if (this.instance) {\n        this.instance.cancel();\n      }\n      if (this.clickWaveTimeoutId) {\n        clearTimeout(this.clickWaveTimeoutId);\n      }\n      this.destroyed = true;\n    }\n  }, {\n    key: "getAttributeName",\n    value: function getAttributeName() {\n      var getPrefixCls = this.context.getPrefixCls;\n      var insertExtraNode = this.props.insertExtraNode;\n      return insertExtraNode ? "".concat(getPrefixCls(\'\'), "-click-animating") : "".concat(getPrefixCls(\'\'), "-click-animating-without-extra-node");\n    }\n  }, {\n    key: "resetEffect",\n    value: function resetEffect(node) {\n      var _this2 = this;\n      if (!node || node === this.extraNode || !(node instanceof Element)) {\n        return;\n      }\n      var insertExtraNode = this.props.insertExtraNode;\n      var attributeName = this.getAttributeName();\n      node.setAttribute(attributeName, \'false\'); // edge has bug on `removeAttribute` #14466\n      if (styleForPseudo) {\n        styleForPseudo.innerHTML = \'\';\n      }\n      if (insertExtraNode && this.extraNode && node.contains(this.extraNode)) {\n        node.removeChild(this.extraNode);\n      }\n      [\'transition\', \'animation\'].forEach(function (name) {\n        node.removeEventListener("".concat(name, "start"), _this2.onTransitionStart);\n        node.removeEventListener("".concat(name, "end"), _this2.onTransitionEnd);\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(ConfigConsumer, null, this.renderWave);\n    }\n  }]);\n  return InternalWave;\n}(react.Component);\nInternalWave.contextType = ConfigContext;\nvar Wave = /*#__PURE__*/(0,react.forwardRef)(function (props, ref) {\n  return /*#__PURE__*/react.createElement(InternalWave, (0,esm_extends/* default */.Z)({\n    ref: ref\n  }, props));\n});\n/* harmony default export */ const wave = (Wave);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/antd@4.23.6_react-dom@18.2.0+react@18.2.0/node_modules/antd/es/button/button-group.js\n\n\nvar __rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\n\n\n\nvar GroupSizeContext = /*#__PURE__*/react.createContext(undefined);\nvar ButtonGroup = function ButtonGroup(props) {\n  var _classNames;\n  var _React$useContext = react.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var customizePrefixCls = props.prefixCls,\n    size = props.size,\n    className = props.className,\n    others = __rest(props, ["prefixCls", "size", "className"]);\n  var prefixCls = getPrefixCls(\'btn-group\', customizePrefixCls);\n  // large => lg\n  // small => sm\n  var sizeCls = \'\';\n  switch (size) {\n    case \'large\':\n      sizeCls = \'lg\';\n      break;\n    case \'small\':\n      sizeCls = \'sm\';\n      break;\n    case \'middle\':\n    case undefined:\n      break;\n    default:\n       false ? 0 : void 0;\n  }\n  var classes = classnames_default()(prefixCls, (_classNames = {}, (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-").concat(sizeCls), sizeCls), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-rtl"), direction === \'rtl\'), _classNames), className);\n  return /*#__PURE__*/react.createElement(GroupSizeContext.Provider, {\n    value: size\n  }, /*#__PURE__*/react.createElement("div", (0,esm_extends/* default */.Z)({}, others, {\n    className: classes\n  })));\n};\n/* harmony default export */ const button_group = (ButtonGroup);\n// EXTERNAL MODULE: ./node_modules/.pnpm/@ant-design+icons@4.7.0_react-dom@18.2.0+react@18.2.0/node_modules/@ant-design/icons/es/icons/LoadingOutlined.js + 12 modules\nvar LoadingOutlined = __webpack_require__(707);\n// EXTERNAL MODULE: ./node_modules/.pnpm/rc-motion@2.6.2_react-dom@18.2.0+react@18.2.0/node_modules/rc-motion/es/index.js + 13 modules\nvar es = __webpack_require__(136);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/antd@4.23.6_react-dom@18.2.0+react@18.2.0/node_modules/antd/es/button/LoadingIcon.js\n\n\n\nvar getCollapsedWidth = function getCollapsedWidth() {\n  return {\n    width: 0,\n    opacity: 0,\n    transform: \'scale(0)\'\n  };\n};\nvar getRealWidth = function getRealWidth(node) {\n  return {\n    width: node.scrollWidth,\n    opacity: 1,\n    transform: \'scale(1)\'\n  };\n};\nvar LoadingIcon = function LoadingIcon(_ref) {\n  var prefixCls = _ref.prefixCls,\n    loading = _ref.loading,\n    existIcon = _ref.existIcon;\n  var visible = !!loading;\n  if (existIcon) {\n    return /*#__PURE__*/react.createElement("span", {\n      className: "".concat(prefixCls, "-loading-icon")\n    }, /*#__PURE__*/react.createElement(LoadingOutlined/* default */.Z, null));\n  }\n  return /*#__PURE__*/react.createElement(es/* default */.Z, {\n    visible: visible,\n    // We do not really use this motionName\n    motionName: "".concat(prefixCls, "-loading-icon-motion"),\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, function (_ref2, ref) {\n    var className = _ref2.className,\n      style = _ref2.style;\n    return /*#__PURE__*/react.createElement("span", {\n      className: "".concat(prefixCls, "-loading-icon"),\n      style: style,\n      ref: ref\n    }, /*#__PURE__*/react.createElement(LoadingOutlined/* default */.Z, {\n      className: className\n    }));\n  });\n};\n/* harmony default export */ const button_LoadingIcon = (LoadingIcon);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/antd@4.23.6_react-dom@18.2.0+react@18.2.0/node_modules/antd/es/button/button.js\n\n\n\n\nvar button_rest = undefined && undefined.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable react/button-has-type */\n\n\n\n\n\n\n\n\n\n\n\n\nvar rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\nvar isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\nfunction isString(str) {\n  return typeof str === \'string\';\n}\nfunction isUnBorderedButtonType(type) {\n  return type === \'text\' || type === \'link\';\n}\nfunction isReactFragment(node) {\n  return /*#__PURE__*/react.isValidElement(node) && node.type === react.Fragment;\n}\n// Insert one space between two chinese characters automatically.\nfunction insertSpace(child, needInserted) {\n  // Check the child if is undefined or null.\n  if (child === null || child === undefined) {\n    return;\n  }\n  var SPACE = needInserted ? \' \' : \'\';\n  // strictNullChecks oops.\n  if (typeof child !== \'string\' && typeof child !== \'number\' && isString(child.type) && isTwoCNChar(child.props.children)) {\n    return cloneElement(child, {\n      children: child.props.children.split(\'\').join(SPACE)\n    });\n  }\n  if (typeof child === \'string\') {\n    return isTwoCNChar(child) ? /*#__PURE__*/react.createElement("span", null, child.split(\'\').join(SPACE)) : /*#__PURE__*/react.createElement("span", null, child);\n  }\n  if (isReactFragment(child)) {\n    return /*#__PURE__*/react.createElement("span", null, child);\n  }\n  return child;\n}\nfunction spaceChildren(children, needInserted) {\n  var isPrevChildPure = false;\n  var childList = [];\n  react.Children.forEach(children, function (child) {\n    var type = (0,esm_typeof/* default */.Z)(child);\n    var isCurrentChildPure = type === \'string\' || type === \'number\';\n    if (isPrevChildPure && isCurrentChildPure) {\n      var lastIndex = childList.length - 1;\n      var lastChild = childList[lastIndex];\n      childList[lastIndex] = "".concat(lastChild).concat(child);\n    } else {\n      childList.push(child);\n    }\n    isPrevChildPure = isCurrentChildPure;\n  });\n  // Pass to React.Children.map to auto fill key\n  return react.Children.map(childList, function (child) {\n    return insertSpace(child, needInserted);\n  });\n}\nvar ButtonTypes = tuple(\'default\', \'primary\', \'ghost\', \'dashed\', \'link\', \'text\');\nvar ButtonShapes = tuple(\'default\', \'circle\', \'round\');\nvar ButtonHTMLTypes = tuple(\'submit\', \'button\', \'reset\');\nfunction convertLegacyProps(type) {\n  if (type === \'danger\') {\n    return {\n      danger: true\n    };\n  }\n  return {\n    type: type\n  };\n}\nvar InternalButton = function InternalButton(props, ref) {\n  var _classNames;\n  var _props$loading = props.loading,\n    loading = _props$loading === void 0 ? false : _props$loading,\n    customizePrefixCls = props.prefixCls,\n    _props$type = props.type,\n    type = _props$type === void 0 ? \'default\' : _props$type,\n    danger = props.danger,\n    _props$shape = props.shape,\n    shape = _props$shape === void 0 ? \'default\' : _props$shape,\n    customizeSize = props.size,\n    customDisabled = props.disabled,\n    className = props.className,\n    children = props.children,\n    icon = props.icon,\n    _props$ghost = props.ghost,\n    ghost = _props$ghost === void 0 ? false : _props$ghost,\n    _props$block = props.block,\n    block = _props$block === void 0 ? false : _props$block,\n    _props$htmlType = props.htmlType,\n    htmlType = _props$htmlType === void 0 ? \'button\' : _props$htmlType,\n    rest = button_rest(props, ["loading", "prefixCls", "type", "danger", "shape", "size", "disabled", "className", "children", "icon", "ghost", "block", "htmlType"]);\n  var size = react.useContext(config_provider_SizeContext);\n  // ===================== Disabled =====================\n  var disabled = react.useContext(config_provider_DisabledContext);\n  var mergedDisabled = customDisabled || disabled;\n  var groupSize = react.useContext(GroupSizeContext);\n  var _React$useState = react.useState(!!loading),\n    _React$useState2 = (0,slicedToArray/* default */.Z)(_React$useState, 2),\n    innerLoading = _React$useState2[0],\n    setLoading = _React$useState2[1];\n  var _React$useState3 = react.useState(false),\n    _React$useState4 = (0,slicedToArray/* default */.Z)(_React$useState3, 2),\n    hasTwoCNChar = _React$useState4[0],\n    setHasTwoCNChar = _React$useState4[1];\n  var _React$useContext = react.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    autoInsertSpaceInButton = _React$useContext.autoInsertSpaceInButton,\n    direction = _React$useContext.direction;\n  var buttonRef = ref || /*#__PURE__*/react.createRef();\n  var isNeedInserted = function isNeedInserted() {\n    return react.Children.count(children) === 1 && !icon && !isUnBorderedButtonType(type);\n  };\n  var fixTwoCNChar = function fixTwoCNChar() {\n    // Fix for HOC usage like <FormatMessage />\n    if (!buttonRef || !buttonRef.current || autoInsertSpaceInButton === false) {\n      return;\n    }\n    var buttonText = buttonRef.current.textContent;\n    if (isNeedInserted() && isTwoCNChar(buttonText)) {\n      if (!hasTwoCNChar) {\n        setHasTwoCNChar(true);\n      }\n    } else if (hasTwoCNChar) {\n      setHasTwoCNChar(false);\n    }\n  };\n  // =============== Update Loading ===============\n  var loadingOrDelay = typeof loading === \'boolean\' ? loading : (loading === null || loading === void 0 ? void 0 : loading.delay) || true;\n  react.useEffect(function () {\n    var delayTimer = null;\n    if (typeof loadingOrDelay === \'number\') {\n      delayTimer = window.setTimeout(function () {\n        delayTimer = null;\n        setLoading(loadingOrDelay);\n      }, loadingOrDelay);\n    } else {\n      setLoading(loadingOrDelay);\n    }\n    return function () {\n      if (delayTimer) {\n        // in order to not perform a React state update on an unmounted component\n        // and clear timer after \'loadingOrDelay\' updated.\n        window.clearTimeout(delayTimer);\n        delayTimer = null;\n      }\n    };\n  }, [loadingOrDelay]);\n  react.useEffect(fixTwoCNChar, [buttonRef]);\n  var handleClick = function handleClick(e) {\n    var onClick = props.onClick;\n    // https://github.com/ant-design/ant-design/issues/30207\n    if (innerLoading || mergedDisabled) {\n      e.preventDefault();\n      return;\n    }\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n   false ? 0 : void 0;\n   false ? 0 : void 0;\n  var prefixCls = getPrefixCls(\'btn\', customizePrefixCls);\n  var autoInsertSpace = autoInsertSpaceInButton !== false;\n  var sizeClassNameMap = {\n    large: \'lg\',\n    small: \'sm\',\n    middle: undefined\n  };\n  var sizeFullname = groupSize || customizeSize || size;\n  var sizeCls = sizeFullname ? sizeClassNameMap[sizeFullname] || \'\' : \'\';\n  var iconType = innerLoading ? \'loading\' : icon;\n  var linkButtonRestProps = (0,omit/* default */.Z)(rest, [\'navigate\']);\n  var classes = classnames_default()(prefixCls, (_classNames = {}, (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-").concat(shape), shape !== \'default\' && shape), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-").concat(type), type), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-").concat(sizeCls), sizeCls), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-icon-only"), !children && children !== 0 && !!iconType), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-background-ghost"), ghost && !isUnBorderedButtonType(type)), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-loading"), innerLoading), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-two-chinese-chars"), hasTwoCNChar && autoInsertSpace && !innerLoading), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-block"), block), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-dangerous"), !!danger), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-rtl"), direction === \'rtl\'), (0,defineProperty/* default */.Z)(_classNames, "".concat(prefixCls, "-disabled"), linkButtonRestProps.href !== undefined && mergedDisabled), _classNames), className);\n  var iconNode = icon && !innerLoading ? icon : /*#__PURE__*/react.createElement(button_LoadingIcon, {\n    existIcon: !!icon,\n    prefixCls: prefixCls,\n    loading: !!innerLoading\n  });\n  var kids = children || children === 0 ? spaceChildren(children, isNeedInserted() && autoInsertSpace) : null;\n  if (linkButtonRestProps.href !== undefined) {\n    return /*#__PURE__*/react.createElement("a", (0,esm_extends/* default */.Z)({}, linkButtonRestProps, {\n      className: classes,\n      onClick: handleClick,\n      ref: buttonRef\n    }), iconNode, kids);\n  }\n  var buttonNode = /*#__PURE__*/react.createElement("button", (0,esm_extends/* default */.Z)({}, rest, {\n    type: htmlType,\n    className: classes,\n    onClick: handleClick,\n    disabled: mergedDisabled,\n    ref: buttonRef\n  }), iconNode, kids);\n  if (isUnBorderedButtonType(type)) {\n    return buttonNode;\n  }\n  return /*#__PURE__*/react.createElement(wave, {\n    disabled: !!innerLoading\n  }, buttonNode);\n};\nvar Button = /*#__PURE__*/react.forwardRef(InternalButton);\nif (false) {}\nButton.Group = button_group;\nButton.__ANT_BUTTON = true;\n/* harmony default export */ const button_button = (Button);\n;// CONCATENATED MODULE: ./node_modules/.pnpm/antd@4.23.6_react-dom@18.2.0+react@18.2.0/node_modules/antd/es/button/index.js\n\n/* harmony default export */ const es_button = (button_button);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///463\n')}}]);